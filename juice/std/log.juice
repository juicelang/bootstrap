import .std.io as io (stdout)
import .std.log.style
import .std.types (option)
import .std.env

export 'logger := {
	namespace: option(string)
}

log_level := match env.get("LOG_LEVEL") {
	option.some(level) -> { level }
	_ -> { "info" }
}
log_icons := match env.get("LOG_ICONS") {
	option.some(value) -> {
		return value == "true"
	}
	_ -> { false }
}

default_logger := logger(namespace: "")

// FIXME: We shouldn't have to work around JavaScript's `this` binding for
// instances like this.
export info := default_logger.info.bind(default_logger)
export warn := default_logger.warn.bind(default_logger)
export error := default_logger.error.bind(default_logger)
export debug := default_logger.debug.bind(default_logger)
export trace := default_logger.trace.bind(default_logger)
export fatal := default_logger.fatal.bind(default_logger)

is_debug := log_level == "trace" || log_level == "debug"
is_trace := log_level == "trace"

impl logger {
	fn child(self, namespace: string) -> logger {
		if self.namespace {
			logger("${self.namespace}:${namespace}")
		} else {
			logger(namespace)
		}
	}

	fn render_namespace(self) {
		if self.namespace {
			"${style.cyan(self.namespace)} "
		} else {
			""
		}
	}

	fn info(self, message: string) {
		icon := if log_icons { "󰋽 " } else { "" }
		stdout.write_line("${style.bold(style.blue(" ${icon}INFO "))}  ${self.render_namespace()}${message}")
	}

	fn warn(self, message: string) {
		icon := if log_icons { " " } else { "" }
		stdout.write_line("${style.bold(style.yellow(" ${icon}WARN "))}  ${self.render_namespace()}${message}")
	}

	fn error(self, message: string) {
		icon := if log_icons { " " } else { "" }
		stdout.write_line("${style.bold(style.red(" ${icon}ERROR"))}  ${self.render_namespace()}${message}")
	}

	fn debug(self, message: string) {
		if is_debug {
			icon := if log_icons { " " } else { "" }
			stdout.write_line("${style.bold(style.magenta(" ${icon}DEBUG"))}  ${self.render_namespace()}${message}")
		}
	}

	fn trace(self, message: string) {
		if is_trace {
			icon := if log_icons { "󰈈﯎ " } else { "" }
			stdout.write_line("${style.bold(style.gray(" ${icon}TRACE"))}  ${self.render_namespace()}${message}")
		}
	}

	fn fatal(self, message: string) {
		icon := if log_icons { "󰚌 " } else { "" }
		stdout.write_line("${style.bold(style.white_bg(style.red(" ${icon}FATAL ")))} ${self.render_namespace()}${message}")

		// exit(1)
	}
}
