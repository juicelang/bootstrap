import .std.io
import .std.types (type, result, option)
import .std.data.map (map)
import .cli.help as help_command
import .cli.build as build_command

export fn main() -> future(result) {
	args := io.parse_process_arguments([
		io.argument.boolean("help", "h"),
		io.argument.boolean("version", "v")
	], permissive: true)?

	if args.has("version") {
		io.stdout.write_line("0.0.0")
		return
	}

	positional_args := args.get("_", [])

	if positional_args.length == 0 {
		help_command.run()

		if args.has("help") {
			return
		}

		return result.error("No command provided")
	}

	sub_command := positional_args.at(0)

	match sub_command {
		"help" -> {
			help_command.run()
		}
		"build" -> {
			build_command.run(args)
		}
		_ -> {
			result.error("Unknown command ${sub_command}")
		}
	}
}
